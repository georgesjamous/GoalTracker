//
//  GoalDetailsScreenViewController.swift
//  GoalTracker
//
//  Created by Georges on 3/5/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import Combine

// Note:
// This is not implemented

final class GoalDetailsScreenViewController: UIViewController {

    deinit {
        detatchSwiftUIView()
    }
    
    // MARK: - SwiftUI View -

    lazy var detailsViewModel = GoalDetailsSwiftUIViewModel()
    lazy var detailsView = GoalDetailsSwiftUIView(viewModel: detailsViewModel)
    lazy var detailsViewHostingController = detailsView.hosted()
    
    // MARK: - Public properties -

    var presenter: GoalDetailsScreenPresenterInterface!
    var cancellableSet = Set<AnyCancellable>()
    
    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        attatchSwiftUIView()
        bindToSwiftUI()
        presenter.viewLoaded()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        presenter.viewDidAppear()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        presenter.viewWillDisappear()
    }
    
    // MARK: SwiftUI View Lifecycle
    
    func attatchSwiftUIView() {
        add(child: detailsViewHostingController)
        view.embed(detailsViewHostingController.view)
    }
    
    func detatchSwiftUIView() {
        detailsViewHostingController.remove()
    }
    
    func bindToSwiftUI() {
        presenter.titlePublisher
            .assignNoRetain(to: \.goalName, on: detailsViewModel)
            .store(in: &cancellableSet)
        
        presenter.detailsPublisher
            .assignNoRetain(to: \.goalDetails, on: detailsViewModel)
            .store(in: &cancellableSet)
        
        presenter.trophyPublisher
            .assignNoRetain(to: \.rewardTrophy, on: detailsViewModel)
            .store(in: &cancellableSet)
        
        presenter.progressPublisher
            .assignNoRetain(to: \.percentageComplete, on: detailsViewModel)
            .store(in: &cancellableSet)
        
        presenter.pointsPublisher
            .assignNoRetain(to: \.rewardPoints, on: detailsViewModel)
            .store(in: &cancellableSet)
        
        presenter.challengeNamePublisher
            .assignNoRetain(to: \.criteriaName, on: detailsViewModel)
            .store(in: &cancellableSet)
        
        presenter.challengeValuePublisher
            .assignNoRetain(to: \.criteriaValue, on: detailsViewModel)
            .store(in: &cancellableSet)
    }

}

// MARK: - Extensions -

extension GoalDetailsScreenViewController: GoalDetailsScreenViewInterface {

}
