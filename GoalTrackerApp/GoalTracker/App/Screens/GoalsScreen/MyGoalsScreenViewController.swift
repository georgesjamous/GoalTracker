//
//  MyGoalsScreenViewController.swift
//  GoalTracker
//
//  Created by Georges on 3/4/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class MyGoalsScreenViewController: UITableViewController {

    // MARK: - Public properties -

    var presenter: MyGoalsScreenPresenterInterface!
    
    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        
        tableView.registerCell(MyGoalsScreenGoalCell.self)
        setupPullDownToRefresh()
        setupNavigationController()
        presenter.viewLoaded()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        presenter.viewDidAppear()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        presenter.viewWillDisappear()
    }
    
    // Note:
    // this shoud be moved to a nvcontroller view model
    // that we can interact with
    func setupNavigationController() {
        let rightBarButton = UIBarButtonItem(
            title: "Next Date",
            style: .done,
            target: self,
            action: #selector(nextDateButtonTapped)
        )
        self.navigationItem.rightBarButtonItem = rightBarButton
        
        let leftBarButton = UIBarButtonItem(
            title: "Previous Date",
            style: .done,
            target: self,
            action: #selector(previousDateButtonTapped)
        )
        self.navigationItem.leftBarButtonItem = leftBarButton
    }
    
    func setupPullDownToRefresh() {
        tableView.refreshControl = UIRefreshControl()
        tableView.refreshControl?.addTarget(self, action: #selector(refreshControlFired), for: .valueChanged)
    }

    @objc func refreshControlFired() {
        presenter.refresh()
    }
    
    @objc func nextDateButtonTapped() {
        presenter.nextDate()
    }
    
    @objc func previousDateButtonTapped() {
        presenter.previousDate()
    }
}

// MARK: - Extensions -

extension MyGoalsScreenViewController: MyGoalsScreenViewInterface {
    func showLoader() {
        tableView.refreshControl?.beginRefreshing()
    }
    func hideLoader() {
        tableView.refreshControl?.endRefreshing()
    }
    func reloadView() {
        // todo: attempt to reload each changed cell with animation
        tableView.reloadData()
        title = presenter.viewTitle

    }
}

extension MyGoalsScreenViewController {
    override func numberOfSections(in tableView: UITableView) -> Int {
        1
    }
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        presenter.numberOfGoals
    }
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell: MyGoalsScreenGoalCell = tableView.dequeueCell(indexPath: indexPath)
        cell.parentViewController = self
        cell.model = .init(
            goalName: presenter.goalName(index: indexPath.row),
            goalDescription: presenter.goalName(index: indexPath.row),
            goalProgress: presenter.goalProgress(index: indexPath.row)
        )
        return cell
    }
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        presenter.goalSelected(index: indexPath.row)
    }
}
